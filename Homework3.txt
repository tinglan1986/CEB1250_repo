- Write a SQL query to get the third highest salary of an employee from employee_table

select emp_no, salary 
 from 
 (
 select 
    employees.*, details.salary,
    row_number() over (order by salary desc) salaryrank
 from 
      employees
 inner join 
      details
           on employees.emp_no = details.emp_no
 ) v
 where salaryrank=3


- Write a SQL query to find the names of employees that begin with ‘A’ 

select * from employees where first_name like 'A%'


- What is the difference between ‘HAVING’ CLAUSE and a ‘WHERE’ CLAUSE

'Where' is used to filter the rows or columns, whereas 'Having' is used to filter the groups.


- List, and explain the elements of an Entities and Relationships model

In table, it mostly consists of key value and other common values. The key value is a common attribute that can be shared by two or multiple tables, whereas other common values are mostly attribute to certain table.


- List, and explain, the different types of joins

Inner join is pretty much like self join where it will only display the shared overlapped attributes between the two tables. The left join is the inner join + all attributes from the left table, and the right join is the inner join + all attributes from the right table. Finally, the outer join is everything within the two tables.


- What is the difference between NULL value, Zero, and Blank space

Null represents a missing value, while zero is still a value, and blank space is some kind of indentation for the SQL language.


- Write a SQL that returns the employee name and title for all employees with even number as actual salary (to_date is 9999-01-01)

SELECT e.first_name, e.last_name, t.title
FROM employees e, titles t, salaries s
WHERE e.emp_no = t.emp_no
AND t.to_date = '9999-01-01'
AND s.salary % 2 = 0;


-  What is wrong with the following query, re-write it making the needed corrections.

SELECT e.emp_no, AVG(s.salary) 
FROM employees e, salaries s
WHERE e.emp_no = s.emp_no 
HAVING AVG(s.salary) > 10000
GROUP BY e.emp_no;
